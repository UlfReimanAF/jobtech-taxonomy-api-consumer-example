/*
 * Jobtech Taxonomy
 * Jobtech taxonomy services
 *
 * OpenAPI spec version: 0.9.0
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package se.jobtech.taxonomy.client.model;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModelProperty;

import java.util.Objects;

/**
 * Response3266
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2019-05-21T08:53:05.447+02:00")
public class Response3266 {
    @JsonProperty("reason")
    private ReasonEnum reason = null;

    public Response3266 reason( ReasonEnum reason ) {
        this.reason = reason;
        return this;
    }

    /**
     * Get reason
     *
     * @return reason
     **/
    @ApiModelProperty(required = true, value = "")
    public ReasonEnum getReason() {
        return reason;
    }

    public void setReason( ReasonEnum reason ) {
        this.reason = reason;
    }

    @Override
    public boolean equals( java.lang.Object o ) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass( ) != o.getClass( )) {
            return false;
        }
        Response3266 response3266 = (Response3266) o;
        return Objects.equals( this.reason, response3266.reason );
    }

    @Override
    public int hashCode() {
        return Objects.hash( reason );
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder( );
        sb.append( "class Response3266 {\n" );

        sb.append( "    reason: " ).append( toIndentedString( reason ) ).append( "\n" );
        sb.append( "}" );
        return sb.toString( );
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString( java.lang.Object o ) {
        if (o == null) {
            return "null";
        }
        return o.toString( ).replace( "\n", "\n    " );
    }

    /**
     * Gets or Sets reason
     */
    public enum ReasonEnum {
        NOT_FOUND( "NOT_FOUND" );

        private String value;

        ReasonEnum( String value ) {
            this.value = value;
        }

        @JsonCreator
        public static ReasonEnum fromValue( String text ) {
            for (ReasonEnum b : ReasonEnum.values( )) {
                if (String.valueOf( b.value ).equals( text )) {
                    return b;
                }
            }
            return null;
        }

        @JsonValue
        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf( value );
        }
    }

}

